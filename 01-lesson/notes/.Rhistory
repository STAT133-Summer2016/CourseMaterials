mode(mean)
?mode
typeof(mean)
typeof('+')
typeof('%+%')
typeof(%+%)
'+'(2,1)
mean
typeof(sum)
sum
mode(integer(2))
typeof(integer(2))
mode(NULL)
mode(NA)
typeof(NA)
typeof(factor(c(1,2,3)))
nycflights13
install.packages("nycflights13")
?flights
data(flights, packages = "nycflights13")
data(flights, package = "nycflights13")
flights
help(flights)
library(nycflights13)
help(flights)
??nycflights13
data(flights)
flights <- data(flights)
data(flights)
head(flights)
help(flights)
table(flights$year)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
Mode(flights$year)
unique(flights$year)
tabulate(match(flights$year, 2013))
plane_max_ad <- flights$tailnum[which.max(flights$arr_delay)]
plane_max_ad <- flights$tailnum[which.max(flights$arr_delay)]
plane_max_ad
flights[flights$dest=="DFW"]
flights[,flights$dest=="DFW"]
flights[flights$dest=="DFW",]
flights[flights$dest=="DFW",]
:?which
?which
flights[which(dest=="dfw")]
flights[which(flights$dest == "DFW")]
flights[which(flights$dest == "DFW"),]
flights[flights$dest == "DFW" & flights$origin == "LGA",]
nrow(flights[flights$dest == "DFW" & flights$origin == "LGA",])
load(url("http://gastonsanchez.com/teaching/stat133/raiders.RData"))
read.csv(../lab/"raiders.csv")
read.csv("../lab/"raiders.csv")
read.csv("../lab/raiders.csv")
raiders <- read.csv("../lab/raiders.csv")
raiders$favor
raiders$against
scored <- c(14, 14, 9, 14, 28, 13, 13, 24, 17, 6, 24, 0, 24, 13, 26, 14)
against <- c(19, 30, 16, 38, 31, 24, 23, 30, 41, 13, 20, 52, 13, 31, 24, 47)
class(scored)
# Chunk 1: setup
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(tidy = FALSE, cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
# Chunk 2
1 + 1
5 / 9
# Chunk 3
# This line of code will not get evaluated.  2 + 2
## The line below this one will be though
2 + 2
# Chunk 4
# Adding two vectors together
c(1, 2, 3) + c(4, 5, 6)
# Multiplying two vectors together
c(1, 2, 3) * c(1, 2, 3)
# Chunk 5
# Assigning the vector (1, 2, 3) to x
x <- c(1, 2, 3)
# Assigning the vector (4, 5, 6) to y
y <- c(4, 5, 6)
# Adding x and y should return (5, 7, 9)
x + y
# Chunk 6
mean(x)
4 != 2+3
5 == 2+3
c(1,2) == c(1,5)
x <- 5
3 > x & x < 7
# 3 < x < 7 doesn't work!
1 + 1
1 + 1
2 + 3
1 + 1
2 + 3
# These two lines add numbers together
c(1, 2, 3)
x <- c(1, 2, 3)
y <- c(4, 5, 6)
x
y
x + y
x * y
x/ y
3*x
3 + x
x <- 4
X
x <- c(1, 2, 3)
y <- c(4, 5, 6)
mean(x)
median(y)
mean
help(mean)
?mean
5 == 2 +3
4 == 2 + 3
5 <= 2 + 6
2 != 1 + 1
x <- 5
3 < x < 7
x <- c(1, 3, 5, 7, 9)
x < 6
x[x < 6]
x
rm(x)
x
ls()
scored <- c(14, 14, 9, 14, 28, 13, 13, 24, 17, 6, 24, 0, 24, 13, 26, 14)
against <- c(19, 30, 16, 38, 31, 24, 23, 30, 41, 13, 20, 52, 13, 31, 24, 47)
scored[7]
length(scored)
?seq
which(against < scored)
?rm
rm(ls())
ls()
do.call(rm, ls)
do.call(rm, list(ls()))
rm(list = ls())
